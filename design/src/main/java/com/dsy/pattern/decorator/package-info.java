/**
 * @Author: dsy
 * @Description: 装饰器模式：也叫包装器模式，指在不改变原有对象的基础之上，将功能附加到对象之上，
 *               提供了比继承更有弹性的代替方案（扩展原有对象的功能）  属于结构性设计模式
 *               适用场景：1、用于扩展一个类的功能或者给一个类添加附加职责
 *                       2、动态的给一个对象添加功能，这写功能可以在动态的撤销
 *               装饰器模式强调的是自身的功能的扩展，自己说了算的可透明扩展，可动态定制的扩展
 *               代理模式：强调的是代理过程的控制
 *
 *               优点：1、装饰器是继承的有力补充，比继承灵活，不改变原有对象的情况下动态的给对象一个
 *                      扩展的功能，即插即用。
 *                    2、通过使用不同的装饰类以及这些类的排列组合，可实现不同效果。
 *                    3、装饰器完全遵循开闭原则
 *               缺点：1、会出现更多的代码，更多的类，增加程序的复杂性。
 *                    2、动态的装饰时、多层装饰时会更复杂。
 * @Date: Create in 下午3:50 2020/12/10
 * @Modified by:
 */
package com.dsy.pattern.decorator;