/**
 * @Author: dsy
 * @Description: 责任链模式（Chain of Responsibility Pattern）：是将链中每一个节点看作是下一个对象，
 *               每个节点处理的请求均不同，且内部自动维护一个下一节点对象，当一个请求从链式首端发出时，会沿着
 *               链的路径一次传递给每一个几点对象，直至有对象处理这个请求为止。 属于行为型设计模式
 *
 *               适用场景：1、多个对象处理同一个请求，但具体由那个对象处理则在运行时动态决定。
 *                       2、在不确定指定接受者的情况下，向多个对象中的一个提交一个请求；
 *                       3、可动态指定一组对象处理请求；
 *
 *               优   点：1、请求与处理解耦；
 *                       2、请求处理者（节点对象）只关注自己感兴趣的请求处理即可，对于不感兴趣的请求，直接
 *                       转发给下个对象处理。
 *                       3、具备链式传递处理请求功能，请求发送者无需知晓链路结构，只需等待请求处理结果。
 *                       4、链路结构灵活，可以通过改变链路结构动态的新增活着删减责任。
 *                       5、易于扩展新的请求处理类（节点），符合开闭原则。
 *
 *               缺   点：1、责任链的太长或者处理时间过长，会影响整体性能。
 *                       2、如果节点对象存在循环引用时，会造成死循环，导致系统崩溃。
 * @Date: Create in 下午5:03 2020/12/17
 * @Modified by:
 */
package com.dsy.pattern.chain;